Sub ImportTxtFileData()
    Dim filePath As String
    Dim fileContent As String
    Dim dataArray() As String
    Dim rowIndex As Long
    Dim columnIndex As Long
    Dim resultSheet As Worksheet
    Dim sheetName As String
    Dim sheetIndex As Integer
    
    ' ファイル選択ダイアログを表示し、txtファイルを選択させる
    With Application.FileDialog(msoFileDialogFilePicker)
        .Title = "txtファイルを選択してください"
        .Filters.Add "テキストファイル", "*.txt"
        If .Show = -1 Then
            filePath = .SelectedItems(1)
        Else
            Exit Sub ' ファイルが選択されなかった場合、処理を終了
        End If
    End With
    
    ' テキストファイルを1行ずつ読み込む（BOM付きのUTF-8対応）
    With CreateObject("ADODB.Stream")
        .Charset = "UTF-8"
        .Open
        .LoadFromFile filePath
        fileContent = .ReadText
        .Close
    End With
    
    ' テキストを改行文字で分割し、データを配列に格納する
    dataArray = Split(fileContent, vbCrLf)
    
    ' "result"という新しいシートを作成する
    sheetName = "result"
    sheetIndex = 1
    Do While SheetExists(sheetName)
        sheetIndex = sheetIndex + 1
        sheetName = "result" & Format(sheetIndex, "00")
    Loop
    
    Set resultSheet = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
    resultSheet.Name = sheetName
    
    ' データをExcelシートに出力する
    rowIndex = 1
    For Each line In dataArray
        columnIndex = 1
        For Each item In Split(line, ",")
            resultSheet.Cells(rowIndex, columnIndex).Value = item
            columnIndex = columnIndex + 1
        Next item
        rowIndex = rowIndex + 1
    Next line
    
    ' シートの見た目を整える
    With resultSheet
        ' 列の幅を設定する
        .Columns("A").ColumnWidth = 13
        .Columns("B").ColumnWidth = 4
        .Columns("C").ColumnWidth = 55
        .Columns("D").ColumnWidth = 30
        .Columns("E").ColumnWidth = 3
        
        ' 文字位置を設定する
        .Range("A:B,E:E").HorizontalAlignment = xlCenter
        
        ' フォントを設定する
        .Cells.Font.Name = "Meiryo UI"
        
        ' 行の間に点線の罫線を引く
        .Cells.Rows.BorderAround xlDot, Weight:=xlThin, ColorIndex:=xlAutomatic
        .Cells.Rows.Borders(xlInsideHorizontal).LineStyle = xlDot
        
        ' 列の間に実線の罫線を引く
        .Cells.Columns.BorderAround xlContinuous, Weight:=xlThin
        .Cells.Columns.BorderAround xlContinuous, Weight:=xlThin
        .Cells.Columns.Borders(xlInsideVertical).LineStyle = xlContinuous
        .Columns("B:C").Borders(xlEdgeRight).LineStyle = xlNone ' A列とB列の間に罫線を引かない
        
        ' セルの罫線を設定する
        .Cells.Borders.LineStyle = xlContinuous
        .Cells.Borders.Weight = xlThin
    End With
    
    MsgBox "データの読み込みが完了しました。", vbInformation
End Sub

Function SheetExists(sheetName As String) As Boolean
    Dim sheet As Worksheet
    
    On Error Resume Next
    Set sheet = ThisWorkbook.Sheets(sheetName)
    On Error GoTo 0
    
    SheetExists = Not sheet Is Nothing
End Function
